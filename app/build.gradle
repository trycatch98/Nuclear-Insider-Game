apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.depromeet.tmj.nuclear_insider_game"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 9
        versionName "1.4.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("keystore/debug.keystore")
        }
        release {
            storeFile file("keystore/release.keystore")
            storePassword "tmj1234"
            keyAlias "tmj"
            keyPassword "tmj1234"
        }
    }

    buildTypes {
        buildTypes {
            debug {
                debuggable true
                signingConfig signingConfigs.debug
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }

            release {
                minifyEnabled false
                debuggable false
                signingConfig signingConfigs.release
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
        packagingOptions {
            exclude 'META-INF/proguard/androidx-annotations.pro'
        }
    }
}

def publish = project.tasks.create("publish")
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def copyTask = project.tasks.create("publish${variant.buildType.name.capitalize()}", Copy)
        copyTask.from(output.outputFile)

        def buildDir = new File(System.getProperty("user.home") + "/Desktop/build/${applicationName}")
        if (!buildDir.exists()) {
            buildDir.mkdir()
        }
        copyTask.into(buildDir)
        copyTask.rename { String fileName ->
            def date = new Date()
            def formattedDate = date.format('YYYYMMddHHmm')
            def newFileName = "${applicationName}_v${variant.versionName}_${variant.buildType.name}_${formattedDate}.apk"
            fileName.replace(fileName, newFileName)
        }

        copyTask.dependsOn variant.assemble
        publish.dependsOn copyTask
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android x
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    // rx
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxBindingVersion"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // anko
    implementation "org.jetbrains.anko:anko:$ankoVersion"
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"

    // glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    implementation 'com.google.android.gms:play-services-ads:17.1.3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha02'
    implementation 'com.google.firebase:firebase-database:16.1.0'
    implementation 'com.google.firebase:firebase-core:16.0.7'

    // 카카오링크 sdk를 사용하기 위해 필요.
    implementation group: 'com.kakao.sdk', name: 'kakaolink', version: project.KAKAO_SDK_VERSION
}
